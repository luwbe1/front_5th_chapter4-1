name: Deploy Next.js to S3 and invalidate CloudFront

# 워크플로우 트리거: main 브랜치에 push되거나 수동으로 실행할 때
on:
  push:
    branches:
      - main # 또는 master, 프로젝트의 기본 브랜치 이름에 맞게 조정
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest # Ubuntu 최신 환경에서 실행

    steps:
      - name: Checkout repository # 저장소의 코드를 체크아웃
        uses: actions/checkout@v4

      - name: Install dependencies # Node.js 의존성 설치. npm ci는 package-lock.json 기반으로 설치
        run: npm ci

      - name: Build # Next.js 빌드. 프로젝트를 빌드해서 out/ 폴더에 생성
        run: npm run build

      - name: Configure AWS credentials # AWS CLI 인증
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3 # 빌드 결과물을 S3 버킷으로 동기화. --delete 옵션으로 S3 버킷에서 삭제된 파일도 함께 정리.
        run: |
          aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront cache # CloudFront 캐시 무효화. 새로 배포된 파일로 사용자에게 콘텐츠를 제공하기 위해 캐시 비우기.
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
